// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SZ.AutoClassics.Dados.Context;

#nullable disable

namespace SZ.AutoClassics.Dados.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230818051940_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SZ.AutoClassics.Dominio.Models.Anuncio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AirBag")
                        .HasColumnType("bit");

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.Property<bool>("ArCondicionado")
                        .HasColumnType("bit");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cambio")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Carroceria")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<Guid>("CidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Combustivel")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasColumnType("varchar(4000)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Motor")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<int>("NumeroPortas")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quilometragem")
                        .HasColumnType("int");

                    b.Property<bool>("Radio")
                        .HasColumnType("bit");

                    b.Property<bool>("TetoSolar")
                        .HasColumnType("bit");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("TravasEletricas")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Anuncios");
                });

            modelBuilder.Entity("SZ.AutoClassics.Dominio.Models.Cidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("SZ.AutoClassics.Dominio.Models.Estado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("SZ.AutoClassics.Dominio.Models.Anuncio", b =>
                {
                    b.HasOne("SZ.AutoClassics.Dominio.Models.Cidade", "Cidade")
                        .WithMany("Anuncios")
                        .HasForeignKey("CidadeId")
                        .IsRequired();

                    b.HasOne("SZ.AutoClassics.Dominio.Models.Estado", "Estado")
                        .WithMany("Anuncios")
                        .HasForeignKey("EstadoId")
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("SZ.AutoClassics.Dominio.Models.Cidade", b =>
                {
                    b.HasOne("SZ.AutoClassics.Dominio.Models.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId")
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("SZ.AutoClassics.Dominio.Models.Cidade", b =>
                {
                    b.Navigation("Anuncios");
                });

            modelBuilder.Entity("SZ.AutoClassics.Dominio.Models.Estado", b =>
                {
                    b.Navigation("Anuncios");

                    b.Navigation("Cidades");
                });
#pragma warning restore 612, 618
        }
    }
}
